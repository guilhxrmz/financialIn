export declare const createQueryBuilder: {
    select: () => any;
    update: () => any;
    delete: () => any;
    from: () => any;
    insert: () => any;
    into: () => any;
    values: () => any;
    set: () => any;
    addSelect: () => any;
    groupBy: () => any;
    where: () => any;
    andWhere: () => any;
    leftJoinAndSelect: () => any;
    innerJoin: () => any;
    relation: () => any;
    add: () => any;
    skip: () => any;
    take: () => any;
    of: () => any;
    orderBy: () => any;
    execute: () => {};
    getOne: () => {};
    getCount: () => number;
    getMany: () => any[];
    getRawOne: () => {};
    getRawMany: () => any[];
    getManyAndCount: () => (number | any[])[];
};
export declare const mockRepository: {
    createQueryBuilder: () => {
        select: () => any;
        update: () => any;
        delete: () => any;
        from: () => any;
        insert: () => any;
        into: () => any;
        values: () => any;
        set: () => any;
        addSelect: () => any;
        groupBy: () => any;
        where: () => any;
        andWhere: () => any;
        leftJoinAndSelect: () => any;
        innerJoin: () => any;
        relation: () => any;
        add: () => any;
        skip: () => any;
        take: () => any;
        of: () => any;
        orderBy: () => any;
        execute: () => {};
        getOne: () => {};
        getCount: () => number;
        getMany: () => any[];
        getRawOne: () => {};
        getRawMany: () => any[];
        getManyAndCount: () => (number | any[])[];
    };
};
